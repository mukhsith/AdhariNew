@using Microsoft.AspNetCore.Mvc.Localization
@model Utility.Models.Frontend.ProductManagement.ProductModel
@inject IHtmlLocalizer<SharedResource> SharedHtmlLocalizer
@{
    var requestCultureFeature = System.Globalization.CultureInfo.CurrentCulture.Name;
    Layout = "_Layout";

    var breadCrumbItems = new List<BreadcrumbModel>();
    breadCrumbItems.Add(new BreadcrumbModel() { Url = Url.RouteUrl("products", new { seoName = Model.Category.SeoName }), Title = Model.CategoryName });
    breadCrumbItems.Add(new BreadcrumbModel() { Url = "#", Title = Model.Title });

    var productUrl = Url.RouteUrl("productdetails", new { catName = Model.Category.SeoName, seoName = Model.SeoName });
    var price = string.Empty;
}
@await Html.PartialAsync("_PageHeading", breadCrumbItems)
<section class="main-content py-5 mb-5 product-details">
    <div class="container">
        <div class="row">
            <div class="col-12 col-lg-10 mx-auto">
                <div class="row">
                    <div class="col-12 col-md-4">
                        <div class="mb-3 mb-md-0 position-relative">
                            <img src="@Model.ImageUrl" class="img-fluid border border-grey rounded-5 product-image" alt="@Model.Title">
                            <a href="javascript:;" class="position-absolute wishlist-btn" style="z-index: 1;"
                               onclick="return addToFavourite(@Model.Id,'@productUrl','@Model.ImageUrl','@Model.Title','@Model.FormattedPrice',0,false);">
                                <span class="fa-stack fa-1x">
                                    <i class="fa-solid fa-circle fa-stack-2x text-primary"></i>
                                    <i id="i-add-to-favorite-det" class="fa-heart fa-stack-1x text-white @(Model.Favorite ? "fa-solid":"fa-regular")"></i>
                                </span>
                            </a>
                            <div class="dropdown position-absolute share-btn">
                                <a href="javascript:;" class="dropdown-toggle" style="z-index: 1;" data-bs-toggle="dropdown"
                                   aria-expanded="false">
                                    <span class="fa-stack fa-1x">
                                        <i class="fa-solid fa-circle fa-stack-2x text-primary"></i>
                                        <i class="fa-solid fa-share-from-square fa-stack-1x text-white"></i>
                                    </span>
                                </a>
                                <ul class="dropdown-menu border-primary rounded-3 p-2 shadow share-btns">
                                    <li>
                                        <a class="dropdown-item text-primary my-1 rounded-3 fs-6 facebook-btn"
                                           href="https://www.facebook.com/sharer/sharer.php?u=@Model.DetailsUrl" target="_blank">
                                            <span>
                                                <i class="fa-brands fa-facebook-f me-2"></i>
                                            </span>@SharedHtmlLocalizer["Facebook"]
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-primary my-1 rounded-3 fs-6 twitter-btn"
                                           href="https://twitter.com/share?text=@Model.DetailsUrl" target="_blank">
                                            <span>
                                                <i class="fa-brands fa-twitter me-2"></i>
                                            </span>@SharedHtmlLocalizer["Twitter"]
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-primary my-1 rounded-3 fs-6 whatsapp-btn"
                                           href="https://web.whatsapp.com/send?text=@Model.DetailsUrl"
                                           data-action="share/whatsapp/share">
                                            <span>
                                                <i class="fa-brands fa-whatsapp me-2"></i>
                                            </span>@SharedHtmlLocalizer["WhatsApp"]
                                        </a>
                                    </li>
                                    <li>
                                        <hr class="dropdown-divider body-bg-secondary border-secondary my-0">
                                    </li>
                                    <li>
                                        <a class="dropdown-item text-primary my-1 rounded-3 fs-6 copy-link" href="#">
                                            <span>
                                                <i class="fa-solid fa-copy me-2"></i>
                                            </span>@SharedHtmlLocalizer["CopyLinkToClipboard"]
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-8">
                        <h2 class="text-primary fw-bold mb-3 product-name">@Model.Title</h2>
                        @if (Model.StockQuantity <= 0)
                        {
                            <div class="d-flex mb-3">
                                <span class="out-of-stock text-nowrap bg-danger rounded-pill w-auto py-1 px-2">
                                    <label class="mb-0 fw-bold text-white ">@SharedHtmlLocalizer["OutOfStock"]</label>
                                </span>
                            </div>
                        }
                        <div class="row">
                            <div class="col-12">
                                <!-- For Description -->
                                <div class="body-bg-secondary w-auto border border-secondary rounded-3 px-3 py-2 mb-3">
                                    <!-- Product Description -->
                                    <div class="summernote-content">
                                        <p>
                                            @Html.Raw(Model.Description)
                                        </p>
                                    </div>
                                </div>
                                @if ((Model.ProductType == ProductType.SubscriptionProduct || Model.ProductType == ProductType.BundledProduct))
                                {
                                    if (Model.SubscriptionPackTitles.Count > 0)
                                    {
                                        <div class="body-bg-secondary border border-secondary rounded-3 px-3 py-2 mb-3">
                                            <ul class="ps-0 m-0">
                                                @foreach (var item in Model.SubscriptionPackTitles)
                                                {
                                                    <li class="d-flex justify-content-between mb-1">
                                                        <p class="m-0">@item.Title</p>
                                                    </li>
                                                }
                                            </ul>
                                        </div>
                                    }
                                    <!-- Unit Price -->
                                    <div class="d-flex mb-3">
                                        <div class="body-bg-secondary w-100 border border-secondary rounded-3 px-3 py-2 mb-md-0">
                                            <label for="">@SharedHtmlLocalizer["UnitPrice"]</label>
                                            @if (!string.IsNullOrEmpty(Model.FormattedDiscountedPrice))
                                            {
                                                <p class="text-muted fw-bold fs-5 mb-0 text-decoration-line-through">@Model.FormattedPrice</p>
                                                <p class="text-primary fw-bold fs-3 mb-0 product-price">@Model.FormattedDiscountedPrice</p>
                                                price = Model.FormattedDiscountedPrice;
                                            }
                                            else
                                            {
                                                <p class="text-primary fw-bold fs-3 mb-0 product-price">@Model.FormattedPrice</p>
                                                price = Model.FormattedPrice;
                                            }
                                        </div>
                                    </div>
                                }
                                @if (Model.ProductType == ProductType.BaseProduct)
                                {
                                    <!-- Attributes -->
                                    <div class="product-attributes d-flex my-3">
                                        <div class="body-bg-secondary w-100 border border-secondary rounded-3 flex-fill px-2 py-1 d-flex flex-row justify-content-between me-3">
                                            <label for="">@SharedHtmlLocalizer["Size"]</label>
                                            <p class="text-primary fw-bold mb-0">@Model.ItemSize.Title</p>
                                        </div>
                                        <div class="body-bg-secondary w-100 border border-secondary rounded-3 flex-fill px-2 py-1 d-flex flex-row justify-content-between ">
                                            <label for="">@SharedHtmlLocalizer["PackOf"]</label>
                                            <p class="text-primary fw-bold mb-0">@Model.PiecesPerPacking</p>
                                        </div>
                                    </div>
                                    <!-- For Price -->
                                    <div class="body-bg-secondary w-auto border border-secondary rounded-3 px-3 py-2 mb-3 d-flex justify-content-between">
                                        <label for="">@SharedHtmlLocalizer["UnitPrice"]</label>
                                        <div class="d-flex flex-row">
                                            @if (!string.IsNullOrEmpty(Model.FormattedDiscountedPrice))
                                            {
                                                <p class="text-muted fw-bold fs-5 mb-0 text-decoration-line-through me-3">@Model.FormattedPrice</p>
                                                <p class="text-primary fw-bold fs-3 mb-0 product-price">@Model.FormattedDiscountedPrice</p>
                                                price = Model.FormattedDiscountedPrice;
                                            }
                                            else
                                            {
                                                <p class="text-primary fw-bold fs-3 mb-0 product-price">@Model.FormattedPrice</p>
                                                price = Model.FormattedPrice;
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                            <div class="@(Model.ProductType == ProductType.SubscriptionProduct?"col-12 col-xl-8 mb-3":"col-12 col-xl-6 mb-3")">
                                @if (Model.ProductType == ProductType.SubscriptionProduct && Model.StockQuantity > 0)
                                {
                                    <div class="row">
                                        <!-- Duration -->
                                        <div class="col-6 mb-3">
                                            <label for="duration" class="form-label">@SharedHtmlLocalizer["Duration"]<span class="ms-1 text-danger">*</span></label>
                                            <select class="form-select rounded-5 border-secondary body-bg-secondary no-search" name="Duration" id="Duration">
                                                <option value="">@SharedHtmlLocalizer["PleaseSelect"]</option>
                                                @foreach (var item in Model.SubscriptionDurations)
                                                {
                                                    <option value="@item.Id">@item.Title</option>
                                                }
                                            </select>
                                            <div id="dvErrorDuration">
                                            </div>
                                        </div>
                                        <!-- Delivery Date -->
                                        <div class="col-6 mb-3">
                                            <label for="delivery-date" class="form-label">@SharedHtmlLocalizer["DeliveryDate"]<span class="ms-1 text-danger">*</span></label>
                                            <select class="form-select rounded-5 border-secondary body-bg-secondary no-search" name="DeliveryDate" id="DeliveryDate">
                                                <option value="">@SharedHtmlLocalizer["PleaseSelect"]</option>
                                                @foreach (var item in Model.SubscriptionDeliveryDates)
                                                {
                                                    <option value="@item.Id">@item.Title</option>
                                                }
                                            </select>
                                            <div id="dvErrorDeliveryDate">
                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="col-12 add-to-cart mb-3">
                                    @if (Model.StockQuantity <= 0)
                                    {
                                        <div class="d-flex w-100">
                                            <button type="button" onclick="notifyProduct(@Model.Id,'@productUrl','@Model.ImageUrl','@Model.Title','@Model.FormattedPrice');" data-bs-toggle="tooltip" data-bs-title="Notify me when this product will be available"
                                                    class="btn btn-secondary rounded-pill text-white fw-bold w-100 notify-me-btn">
                                                <span id="notify-product-@Model.Id">
                                                    @(Model.Notified ? SharedHtmlLocalizer["DoNotNotifyMe"].Value : SharedHtmlLocalizer["NotifyMe"].Value)
                                                </span>
                                            </button>
                                        </div>
                                    }
                                    else if (Model.MaxCartQuantity == 1)
                                    {
                                        <div class="d-flex w-100">
                                            <input type="text" inputmode="decimal" style="text-align: center;display:none;"
                                                   value="1" id="txt-quantity">
                                            @if (Model.ProductType == ProductType.SubscriptionProduct)
                                            {
                                                <button type="button" class="add-to-cart btn btn-primary rounded-pill text-white fw-bold w-100"
                                                        id="btn-subscribe">
                                                    @SharedHtmlLocalizer["Subscribe"]
                                                </button>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                <div class="btn-with-input-spinner d-flex w-100">
                                    @if (Model.ProductType == ProductType.SubscriptionProduct)
                                    {
                                        <input type="number" value="@Model.MinCartQuantity" min="@Model.MinCartQuantity" max="@Model.MaxCartQuantity" step="1" class="input-spinner text-white bg-secondary border-0 fs-4" style="display: none;">
                                        <div class="input-group  rounded-5 product-details-spinner">
                                            <button style="min-width: 2.5rem" class="btn btn-decrement btn-secondary text-white fw-bold fs-4 btn-minus-subscription-product-details" type="button">
                                                <strong>−</strong>
                                            </button>
                                            <input type="text" inputmode="decimal" style="text-align: center" class="form-control input-spinner text-white bg-secondary border-0 fs-4" placeholder="" readonly=""
                                                   value="@Model.MinCartQuantity" data-minquantity="@Model.MinCartQuantity" data-maxquantity="@Model.MaxCartQuantity" id="txt-quantity" disabled>
                                            <button style="min-width: 2.5rem" class="btn btn-increment btn-secondary text-white fw-bold fs-4 btn-plus-subscription-product-details" type="button">
                                                <strong>+</strong>
                                            </button>
                                        </div>
                                        <button type="button"
                                                class="btn btn-lg btn-primary rounded-pill rounded-start text-white fw-bold w-100 add-to-cart" id="btn-subscribe">
                                            @SharedHtmlLocalizer["Subscribe"]
                                        </button>
                                    }
                                    else
                                    {
                                        <div class="btn-with-input-spinner w-100">
                                            <button id="btn-add-to-cart-@Model.Id" type="button" class="add-to-cart btn btn-primary rounded-pill text-white fw-bold w-100 "
                                                    style="@(Model.CartQuantity>0?"display: none;":"display: block;")"
                                                    onclick="return addToCart(@Model.Id,1);">
                                                @SharedHtmlLocalizer["AddToCart"]
                                            </button>
                                            <input type="number" value="0" min="0" max="50" step="1" class="input-spinner text-white bg-secondary border-0" style="display: none;">
                                            <div id="dv-quantity-change-@Model.Id" class="input-group rounded-5 card-spinner" style="@(Model.CartQuantity>0?"display: flex;":"display: none;")">
                                                <button style="min-width: 2.5rem" class="btn btn-decrement btn-secondary text-white fw-bold rounded-5 rounded-end btn-minus-card"
                                                        type="button" onclick="return deductCartItem(@Model.Id);">
                                                    <strong>−</strong>
                                                </button>
                                                <input type="text" id="txt-quantity-@Model.Id" inputmode="decimal" style="text-align: center" class="form-control input-spinner text-white bg-secondary border-0"
                                                       value="@Model.CartQuantity" data-maxquantity="@Model.StockQuantity" readonly="">
                                                <button style="min-width: 2.5rem" class="btn btn-increment btn-secondary text-white fw-bold rounded-5 rounded-start btn-plus-card"
                                                        type="button" onclick="return addCartItem(@Model.Id);">
                                                    <strong>+</strong>
                                                </button>
                                            </div>
                                        </div>
                                        <a href="#" id="view-cart-btn-@Model.Id" class="btn btn-primary rounded-pill fw-bold text-white w-100 view-cart-btn ms-2"
                                           style="@(Model.CartQuantity > 0?"display: block;":"display: none;")">
                                            @SharedHtmlLocalizer["ViewCart"]
                                        </a>
                                    }
                                </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<script>
    $(document).ready(function () {
        var current_url = window.location.href.replace('https://', '');
        current_url = window.location.href.replace('http://', '');

        if (mobileCheck())
            $('.whatsapp-btn').attr('href', "whatsapp://send?text=" + current_url);
        else
            $('.whatsapp-btn').attr('href', $('.whatsapp-btn').attr('href') + current_url);

        $('.copy-link').click(function () {
            navigator.clipboard.writeText(window.location.href);
        });

        //Subscription product
        $(".btn-plus-subscription-product-details").click(function () {
            var quantity = $(this).closest(".product-details-spinner").find("input").val();
            var finalQuantity = parseInt(quantity) + 1;

            var maxQuantity = $(this).closest(".product-details-spinner").find("input").attr("data-maxquantity");
            if (finalQuantity > maxQuantity) {
                var errorMessage = "@(SharedHtmlLocalizer["MaximumQuantityAllowed"].Value)";
                errorMessage = errorMessage.replace("{0}", maxQuantity);
                ToastAlert('error', '', errorMessage);
                return;
            }

            $(this).closest(".product-details-spinner").find("input").val(finalQuantity);
        });

        $(".btn-minus-subscription-product-details").click(function () {
            var quantity = $(this).closest(".product-details-spinner").find("input").val();
            var finalQuantity = parseInt(quantity) - 1;
            debugger;
            var minQuantity = $(this).closest(".product-details-spinner").find("input").attr("data-minquantity");
            if (finalQuantity < minQuantity) {
                var productType =@((int)Model.ProductType);
                if (productType ==@((int)ProductType.SubscriptionProduct)) {
                    var errorMessage = "@(SharedHtmlLocalizer["MinimumQuantityAllowed"].Value)";
                    errorMessage = errorMessage.replace("{0}", minQuantity);
                    ToastAlert('error', '', errorMessage);
                }

                return;
            }

            $(this).closest(".product-details-spinner").find("input").val(finalQuantity);
        });

        $("#btn-subscribe").click(function () {
            var productId =@Model.Id;
            var quantity = $("#txt-quantity").val();
            var durationId = $("#Duration").val();
            var deliveryDateId = $("#DeliveryDate").val();

            if (productId == 0 || quantity == "") {
                return;
            }

            var valid = true;
            if (durationId == "") {
                valid = false;
                $("#dvErrorDuration").html("<div class='invalid-feedback has-error' style='display:block !important;'><span>@SharedHtmlLocalizer["SelectDuration"]</span></div>");
            }
            else {
                $("#dvErrorDuration").hide();
            }

            if (deliveryDateId == "") {
                valid = false;
                $("#dvErrorDeliveryDate").html("<div class='invalid-feedback has-error' style='display:block !important;'><span>@SharedHtmlLocalizer["SelectDeliveryDate"]</span></div>");
            }
            else {
                $("#dvErrorDeliveryDate").hide();
            }

            if (!valid) {
                return;
            }

            $.post("@Url.RouteUrl("savesubscriptionattributes")", {
                AttributeTypeId: @((int)AttributeType.Subscribe),
                ProductId: productId,
                Quantity: quantity,
                DurationId: durationId,
                DeliveryDateId: deliveryDateId
            }, function (result) {
                if (result.success) {
                    window.location = "@Url.RouteUrl("subscriptioncheckout")";
                }
                else {
                    if (result.message != "")
                        ToastAlert('error', '', result.message);
                }
            });
        });
    });

    //Normal product
    function addCartItem(productId) {
        var quantity = $("#txt-quantity-" + productId).val();
        var finalQuantity = parseInt(quantity) + 1;

        var maxQuantity = $("#txt-quantity-" + productId).attr("data-maxquantity");
        if (finalQuantity > maxQuantity) {
            var errorMessage = "@(SharedHtmlLocalizer["MaximumQuantityAllowed"].Value)";
            errorMessage = errorMessage.replace("{0}", maxQuantity);
            ToastAlert('error', '', errorMessage);
            return;
        }

        updateCart(productId, 1);
    }

    function deductCartItem(productId) {
        updateCart(productId, -1);
    }

    function updateCart(productId, quantity) {
        if (quantity == "" || parseInt(quantity) == 0) {
            ToastAlert('error', '', '@SharedHtmlLocalizer["Quantity should be greater than zero"]');
            return;
        }

        $(".card-spinner").css("pointer-events", "none");
        $.post("@Url.RouteUrl("addcartitem")", { productId: productId, Quantity: quantity }, function (result) {
            $(".card-spinner").css("pointer-events", "all");
            if (result.success) {
                if (result.data) {
                    updateCartCount();
                    var currentQuantity = $("#txt-quantity-" + productId).val();
                    var finalQuantity = parseInt(currentQuantity) + quantity;
                    if (finalQuantity <= 0) {
                        $("#btn-add-to-cart-" + productId).show();
                        $("#dv-quantity-change-" + productId).css("display", "none");
                        $("#txt-quantity-" + productId).val("");
                        $(".view-cart-btn").hide();
                    }
                    else {
                        $("#txt-quantity-" + productId).val(finalQuantity);
                        $(".view-cart-btn").show();
                    }
                }
                else {
                    if (result.message != "")
                        ToastAlert("error", "", result.message);
                }
            }
            else {
                if (result.message != "")
                    ToastAlert("error", "", result.message);
            }
        });

        return false;
    }

    function mobileCheck() {
        const vw = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
        console.log(vw);
        if (vw < 480)
            return 1;
        else
            return 0;
    };

    $(".view-cart-btn").click(function (e) {
        e.preventDefault();
        $("#a-cart").trigger("click");
    });
</script>