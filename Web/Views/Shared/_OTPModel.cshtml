<div class="modal fade" id="OTPModal" tabindex="-1" aria-labelledby="OTPModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-primary" id="OTPModalTitle">@SharedHtmlLocalizer["VerifyMobileNumber"]</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-12 ">
                        <div class="bg-light-secondary rounded">
                            <form>
                                <div class="row justify-content-center">
                                    <div class="col-12 text-center">
                                        <div class="col-sm-12 text-center">
                                            <p class="mb-0" id="pVerificationMessage"></p>
                                        </div>
                                    </div>
                                    <div class="col-12 col-lg-8">
                                        <div id="otp" class="row align-items-center " style="direction: ltr;">
                                            <div class="col-3 my-1">
                                                <input type="tel" onkeypress="return validateMobileNumber(event);" class="form-control rounded-3 text-center fs-4" placeholder="" id="otp1" min="0" max="9" maxlength="4">
                                            </div>
                                            <div class="col-3 my-1">
                                                <input type="tel" onkeypress="return validateMobileNumber(event);" class="form-control rounded-3 text-center fs-4" placeholder="" id="otp2" min="0" max="9" maxlength="4" readonly disabled>
                                            </div>
                                            <div class="col-3 my-1">
                                                <input type="tel" onkeypress="return validateMobileNumber(event);" class="form-control rounded-3 text-center fs-4" placeholder="" id="otp3" min="0" max="9" maxlength="4" readonly disabled>
                                            </div>
                                            <div class="col-3 my-1">
                                                <input type="tel" onkeypress="return validateMobileNumber(event);" class="form-control rounded-3 text-center fs-4" placeholder="" id="otp4" min="0" max="9" maxlength="4" readonly disabled>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                        </div>
                        <div class="col-12 text-center">
                            <label class="text-danger" id="divIncorrectOtp"></label>
                        </div>
                        <div class="row">
                            <div class="col-12 text-center">
                                <div id="timer" class="mb-3"></div>
                            </div>
                            <div class="col-12 text-center">
                                <a href="#" class="btn btn-primary rounded-pill me-1 verify-otp-button" id="otp-button">@SharedHtmlLocalizer["VerifyOTP"]</a>
                                <button id="resend" type="button" class="btn btn-secondary text-light rounded-pill ms-1" disabled>@SharedHtmlLocalizer["ResendOTP"]</button>
                                <input type="hidden" id="requestId" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        OTPInput();

        $('#resend').click(function () {
            //if (!timerRunning) {
            //    startTimer();
            //}

            $("#resend").prop("disabled", true);
            $("#otp-button").removeClass("disabled");
        });
    });       

    function OTPInput() {
        var inputs = document.querySelectorAll('#otp  *[id]');
        inputs.forEach((tag, i) => {
            inputs[i].addEventListener('keydown', function (event) {
                if (event.key === "Backspace") {
                    inputs[i].value = '';
                    if (i !== 0) {
                        inputs[i - 1].focus();
                        var txtOtp = inputs[i - 1].id;
                        $("#" + txtOtp).removeAttr("readonly").removeAttr("disabled");
                    }
                } else {
                    if (inputs[i].value !== '') {
                        event.preventDefault();
                    } else if ((event.keyCode > 47 && event.keyCode < 58) || (event.keyCode >= 96 && event.keyCode <= 105)) {
                        if (inputs[i].value !== '') {


                        } else {
                            inputs[i].value = event.key;
                            if (i !== inputs.length - 1) {
                                inputs[i + 1].focus();
                                var txtOtp = inputs[i + 1].id;
                                $("#" + txtOtp).removeAttr("readonly").removeAttr("disabled");
                                inputs[i + 1].focus();

                            }
                            event.preventDefault();
                        }
                    } else if (event.keyCode > 64 && event.keyCode < 91) {
                        inputs[i].value = String.fromCharCode(event.keyCode);
                        // if (i !== inputs.length - 1) inputs[i +
                        //     1].focus();
                        event.preventDefault();
                    }
                    else if (event.keyCode > 230) {
                        inputs[i].value = event.key.replace(/٠/g, "0").replace(/١/g, "1").replace(/٢/g, "2").replace(/٣/g, "3").replace(/٤/g, "4").replace(/٥/g, "5").replace(/٦/g, "6").replace(/٧/g, "7").replace(/٨/g, "8").replace(/٩/g, "9");
                        if (i !== inputs.length - 1) {
                            inputs[i + 1].focus();
                            var txtOtp = inputs[i + 1].id;
                            $("#" + txtOtp).removeAttr("readonly").removeAttr("disabled");
                            inputs[i + 1].focus();
                        }
                        event.preventDefault();
                    }
                    else if (event.key == "٠" || event.key == "١" || event.key == "٢" || event.key == "٣" || event.key == "٤" || event.key == "٥" ||
                        event.key == "٦" || event.key == "٧" || event.key == "٨" || event.key == "٩") {
                        inputs[i].value = event.key;
                        if (i !== inputs.length - 1) {
                            inputs[i + 1].focus();
                            var txtOtp = inputs[i + 1].id;
                            $("#" + txtOtp).removeAttr("readonly").removeAttr("disabled");
                            inputs[i + 1].focus();
                        }
                        event.preventDefault();
                    }
                }
            });

            // For Smart Paste Events
            tag.addEventListener('keyup', (event) => {
                // For Android
                if ($(inputs[i]).val().trim().length == 4) {
                    var otp_paste = $(inputs[i]).val().trim().split("");
                    $(inputs[0]).val(otp_paste[0]).removeAttr("disabled").removeAttr("readonly");
                    $(inputs[1]).val(otp_paste[1]).removeAttr("disabled").removeAttr("readonly");
                    $(inputs[2]).val(otp_paste[2]).removeAttr("disabled").removeAttr("readonly");
                    $(inputs[3]).val(otp_paste[3]).removeAttr("disabled").removeAttr("readonly");
                }

                //if any input move focus to next or out
                // For iOS
                if ($("body").hasClass("isApple")) {
                    if (tag.value !== "") {
                        if (i < inputs.length - 1) {
                            $(inputs[i + 1]).removeAttr("disabled").removeAttr("readonly"); inputs[i +
                                1].focus();
                        } else {
                            tag.blur();
                        }
                    }
                }
            });

            tag.addEventListener('paste', (event) => {
                event.preventDefault();
                clipData = event.clipboardData.getData("text/plain").split('');
                
                var pastedData = event.clipboardData.getData('text');
                var otp_paste = event.clipboardData.getData("text/plain").split('');
                
                event.stopPropagation();
                event.preventDefault();
                
                if (pastedData) {
                    if (pastedData.length == 4) {
                        $(inputs[0]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[1]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[2]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[3]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[0]).val(otp_paste[0]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[1]).val(otp_paste[1]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[2]).val(otp_paste[2]).removeAttr("disabled").removeAttr("readonly");
                        $(inputs[3]).val(otp_paste[3]).removeAttr("disabled").removeAttr("readonly");
                    }
                    else {
                        if ($(inputs[i]).val().trim().length == 1) {
                            var otp_paste = $(inputs[i]).val().trim();
                            $(inputs[i]).val(otp_paste[0]);
                        }
                        else {
                            $(inputs[i]).val("");
                        }
                    }
                }
            });
        });
    }

    function startTimer() {
        timerRunning = true;
        var presentTime = document.getElementById('timer').innerHTML;
        var timeArray = presentTime.split(/[:]+/);
        var m = timeArray[0];
        var s = checkSecond((timeArray[1] - 1));
        if (s == 59) {
            m = m - 1
        }
        if (m < 0) {
            return;
        }

        document.getElementById('timer').innerHTML = m + ":" + s;
        if (m === '0' && s === '00') {
            $("#resend").prop("disabled", false);
            $("#otp-button").addClass("disabled");

            timerRunning = false;

            return;
        }
        setTimeout(startTimer, 1000);
    }

    function checkSecond(sec) {
        if (sec < 10 && sec >= 0) {
            sec = "0" + sec
        };
        if (sec < 0) {
            sec = "59"
        };
        return sec;
    }

    function millisToMinutesAndSeconds(millis) {
        var minutes = Math.floor(millis / 60000);
        var seconds = ((millis % 60000) / 1000).toFixed(0);
        return minutes + ":" + (seconds < 10 ? '0' : '') + seconds;
    }
</script>