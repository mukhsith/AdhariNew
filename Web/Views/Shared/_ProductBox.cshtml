@model Utility.Models.Frontend.ProductManagement.ProductModel
@{
    var productUrl = Url.RouteUrl("productdetails", new { catName = Model.Category.SeoName, seoName = Model.SeoName });
    var isFav = ViewBag.isFav == null ? 0 : ViewBag.isFav;
    var price = string.Empty;
}
<div class="col-6 col-md-4 col-lg-3 mb-3 mb-md-5" id="product-box-@Model.Id">
    <div class="product-card position-relative h-100 rounded-5 border border-1">
        <a href="javascript:;" class="position-absolute wishlist-btn" style="z-index: 1;display:none;" onclick="return addToFavourite(@Model.Id,'@productUrl','@Model.ImageUrl','@Model.Title','@Model.FormattedPrice',@isFav,true);">
            <span class="fa-stack fs-5 fa-1x">
                <i class="fa-solid fa-circle fa-stack-2x text-primary"></i>
                <i id="i-add-to-favorite-@Model.Id" class="text-white @(Model.Favorite?"fa-solid":"fa-regular") fa-heart fa-stack-1x"></i>
            </span>
        </a>
        <div class=" d-flex flex-column h-100">
            <div class="position-relative">
                <a href="@Url.RouteUrl("productdetails",new {catName=Model.Category.SeoName,seoName=Model.SeoName })" class="product-url">
                    <img src="@Model.ImageUrl" class="product-image rounded-5 rounded-bottom opacity-100 w-100" alt="">
                </a>
                <div class="position-absolute translate-middle-x bottom-0 start-50" style="z-index: 1;">
                    @if (Model.StockQuantity <= 0)
                    {
                        <div class="out-of-stock text-nowrap bg-danger rounded-4 rounded-bottom w-auto py-1 px-2">
                            <label class="mb-0 fw-bold text-white">@SharedHtmlLocalizer["OutOfStock"]</label>
                        </div>
                    }
                </div>
            </div>
            <div class="p-info rounded-5 rounded-top d-flex flex-column h-100 p-2">
                <div class="p-detail text-center mb-1">
                    <p class="p-name mb-1 text-dark font-title product-name">@Model.Title</p>
                    @if (Model.DiscountedPrice > 0)
                    {
                        <p class="product-price text-primary fw-bold mb-0">@Model.FormattedDiscountedPrice</p>
                        price = Model.FormattedDiscountedPrice;
                    }
                    else
                    {
                        <p class="product-price text-primary fw-bold mb-0">@Model.FormattedPrice</p>
                        price = Model.FormattedPrice;
                    }
                </div>
                <div class="p-action d-flex justify-content-center mt-auto">
                    @if (Model.StockQuantity <= 0)
                    {
                        <button type="button" onclick="notifyProduct(@Model.Id,'@productUrl','@Model.ImageUrl','@Model.Title','@Model.FormattedPrice');" data-bs-toggle="tooltip" data-bs-title="Notify me when this product will be available"
                                class="btn btn-secondary rounded-pill text-white fw-bold w-100 notify-me-btn">
                            <span id="notify-product-@Model.Id">
                                @(Model.Notified ? SharedHtmlLocalizer["DoNotNotifyMe"].Value: SharedHtmlLocalizer["NotifyMe"].Value)
                            </span>
                        </button>
                    }
                    else if (Model.ProductType == ProductType.SubscriptionProduct)
                    {
                        <a href="@Url.RouteUrl("productdetails",new {catName=Model.Category.SeoName,seoName=Model.SeoName })" class="btn btn-primary rounded-pill text-white fw-bold w-100">@SharedHtmlLocalizer["Subscribe"]</a>
                    }
                    else
                    {
                        <div class="btn-with-input-spinner w-100">
                            <button id="btn-add-to-cart-@Model.Id" type="button" class="add-to-cart btn btn-primary rounded-pill text-white fw-bold w-100 "
                                    style="@(Model.CartQuantity>0?"display: none;":"display: block;")"
                                    onclick="return addToCart(@Model.Id,1);">
                                @SharedHtmlLocalizer["AddToCart"]
                            </button>
                            <input type="number" value="0" min="0" max="50" step="1" class="input-spinner text-white bg-secondary border-0" style="display: none;">
                            <div id="dv-quantity-change-@Model.Id" class="input-group rounded-5 card-spinner" style="@(Model.CartQuantity>0?"display: flex;":"display: none;")">
                                <button style="min-width: 2.5rem" class="btn btn-decrement btn-secondary text-white fw-bold rounded-5 rounded-end btn-minus-card"
                                        type="button" onclick="return deductCartItem(@Model.Id);">
                                    <strong>−</strong>
                                </button>
                                <input type="text" id="txt-quantity-@Model.Id" inputmode="decimal" style="text-align: center" class="form-control input-spinner text-white bg-secondary border-0"
                                       value="@Model.CartQuantity" data-maxquantity="@Model.StockQuantity" readonly="">
                                <button style="min-width: 2.5rem" class="btn btn-increment btn-secondary text-white fw-bold rounded-5 rounded-start btn-plus-card"
                                        type="button" onclick="return addCartItem(@Model.Id);">
                                    <strong>+</strong>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    function addCartItem(productId) {
        var quantity = $("#txt-quantity-" + productId).val();
        var finalQuantity = parseInt(quantity) + 1;

        var maxQuantity = $("#txt-quantity-" + productId).attr("data-maxquantity");
        if (finalQuantity > maxQuantity) {
            return;
        }

        updateCart(productId, 1);
    }

    function deductCartItem(productId) {
        updateCart(productId, -1);
    }

    function updateCart(productId, quantity) {
        if (quantity == "" || parseInt(quantity) == 0) {
            showToastErrorMessage('@SharedHtmlLocalizer["Quantity should be greater than zero"]');
            return;
        }

        $.post("@Url.RouteUrl("addcartitem")", { productId: productId, Quantity: quantity }, function (result) {
            if (result.success) {
                if (result.data) {
                    updateCartCount();
                    var currentQuantity = $("#txt-quantity-" + productId).val();
                    var finalQuantity = parseInt(currentQuantity) + quantity;
                    if (finalQuantity <= 0) {
                        $("#btn-add-to-cart-" + productId).show();
                        $("#dv-quantity-change-" + productId).css("display", "none");
                        $("#txt-quantity-" + productId).val("");
                    }
                    else {
                        $("#txt-quantity-" + productId).val(finalQuantity);
                    }
                }
                else {
                    if (result.message != "")
                        ToastAlert("error", "", result.message);
                }
            }
            else {
                if (result.message != "")
                    ToastAlert("error", "", result.message);
            }
        });

        return false;
    }
</script>