@model IList<Utility.Models.Frontend.ProductManagement.CategoryModel>
<div class="container et-hero-tabs mb-3 mb-md-3 pt-5">
    <div class="et-hero-tabs-container justify-content-start justify-content-md-center overflow-hidden border border-secondary rounded-5 p-2">
        @foreach (var item in Model)
        {
            <a class="et-hero-tab" href="#tab-@item.Title.Replace(" ","-")">
                <div class="content d-flex rounded-pill px-2 px-md-3 py-1 mx-2 ">
                    <img src="@item.HoverImageUrl" style="max-height: 25px;">
                    <span class="ms-2">@item.Title</span>
                </div>
            </a>
        }
        <span class="et-hero-tab-slider"></span>
    </div>
</div>
<script>
    class StickyNavigation {
        constructor() {
            this.currentId = null;
            this.currentTab = null;
            this.tabContainerHeight = 0;
            let self = this;
            $('.et-hero-tab').click(function () {
                self.onTabClick(event, $(this));
            });
            $(window).scroll(() => {
                this.onScroll();
            });
            $(window).resize(() => {
                this.onResize();
            });
        }

        onTabClick(event, element) {
            event.preventDefault();
            let scrollTop = $(element.attr('href')).position().top - this.tabContainerHeight - 50; //custom offset 50
            $('html, body').animate({
                scrollTop: scrollTop
            }, 500);
            this.setTabSliderActive();

        }

        onScroll() {
            this.checkTabContainerPosition();
            this.findCurrentTabSelector();
            this.setTabSliderActive();
        }

        onResize() {
            if (this.currentId) {
                this.setSliderCss();
            }
        }

        checkTabContainerPosition() {
            let offset = $('.et-hero-tabs').position().top + $('.et-hero-tabs').height() - this.tabContainerHeight;
            if ($(window).scrollTop() > offset) {
                $('.et-hero-tabs-container').addClass('et-hero-tabs-container--top');
                $('.et-hero-tabs-container').addClass('container');
            } else {
                $('.et-hero-tabs-container').removeClass('et-hero-tabs-container--top');
                $('.et-hero-tabs-container').removeClass('container');
            }
        }

        findCurrentTabSelector(element) {
            let newCurrentId;
            let newCurrentTab;
            let self = this;
            $('.et-hero-tab').each(function () {
                let id = $(this).attr('href');
                let offsetTop = $(id).position().top - self.tabContainerHeight - 100; //custom offset 100
                let offsetBottom = $(id).position().top + $(id).height() - self.tabContainerHeight;
                if ($(window).scrollTop() > offsetTop && $(window).scrollTop() < offsetBottom) {
                    newCurrentId = id;
                    newCurrentTab = $(this);
                }
            });
            if (this.currentId != newCurrentId || this.currentId === null) {
                this.currentId = newCurrentId;
                this.currentTab = newCurrentTab;
                this.setSliderCss();
                this.setTabSliderActive();
            }
        }

        setSliderCss() {
            let width = 0;
            let left = 0;

            if (this.currentTab) {
                width = this.currentTab.css('width');
                left = this.currentTab.position().left;
            }
            if ($('.et-hero-tabs-container').hasClass('slick-initialized')) {
                $('.et-hero-tab-slider').css('width', width);
                $('.et-hero-tab-slider').css('left', 9);
            } else {
                $('.et-hero-tab-slider').css('width', width);
                $('.et-hero-tab-slider').css('left', left);
            }
        }

        setTabSliderActive() {
            if (this.currentTab) {
                if ($('.et-hero-tabs-container').hasClass('slick-initialized')) {
                    $('.et-hero-tabs-container').slick('slickGoTo', this.currentTab.attr('data-slick-index'));
                    $('.et-hero-tabs-container').find('.et-hero-tab').removeClass('active');
                    this.currentTab.addClass('active');
                } else {
                    $('.et-hero-tabs-container').find('.et-hero-tab').removeClass('slick-active');
                    $('.et-hero-tabs-container').find('.et-hero-tab').removeClass('active');
                    this.currentTab.addClass('active');
                }
            }
        }
    }

    new StickyNavigation();
</script>
<script>
    $(function () {
        $('.et-hero-tabs-container').slick({
            rtl: false,
            mobileFirst: true,
            variableWidth: true,
            swipeToSlide: true,
            infinite: false,
            edgeFriction: 1,
            slide: '.et-hero-tab',
            responsive: [{
                breakpoint: 1024,
                settings: 'unslick'
            }]
        });

        if (!$('.et-hero-tabs-container').hasClass('slick-initialized') && $('.et-hero-tab').length > 7) {
            $('.et-hero-tabs-container').slick({
                rtl: false,
                mobileFirst: true,
                variableWidth: true,
                swipeToSlide: true,
                infinite: false,
                edgeFriction: 1,
                slide: '.et-hero-tab'
            });
        }

        // On before slide change
        $('.et-hero-tabs-container').on('beforeChange', function (event, slick, currentSlide, nextSlide) {
            // console.log(nextSlide);
        });
        $('.et-hero-tabs-container').on('afterChange', function (event, slick, currentSlide) {
            // console.log("Changed Slide to :" + currentSlide);
            // if(CurrentSlideValue != currentSlide)
        });
        if ($('html').attr('dir') == 'rtl') {
            console.log("RTL enabled");
            $('.et-hero-tabs-container').slick('slickSetOption', 'rtl', true, false);
        }
    });
</script>
